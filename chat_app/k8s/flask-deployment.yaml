apiVersion: v1
kind: Namespace
metadata:
  name: chat-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: chat-app
  labels:
    app: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: locthp/flask_app:dev
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: WS_HOST
          value: "socket-application.locthp.com"
        - name: MYSQL_HOST
          value: 172.16.1.244
      # tolerations:
      #     - key: node.kubernetes.io/not-ready
      #       operator: Exists
      #       effect: NoExecute
      #       tolerationSeconds: 5
      #     - key: node.kubernetes.io/unreachable
      #       operator: Exists
      #       effect: NoExecute
      #       tolerationSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: chat-app
spec:
  selector:
    app: flask-app
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: flask-app
#   namespace: chat-app
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-prod
#     ingress.kubernetes.io/ssl-redirect: "False"
# spec:
#   ingressClassName: nginx
#   tls:
#   - hosts:
#     - chatapp.internal.locthp.com
#     secretName: testflask-certificate
#   rules:
#   - host: chatapp.internal.locthp.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: flask-app
#             port:
#               number: 80
